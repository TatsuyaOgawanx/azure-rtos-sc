<?xml version="1.0" encoding="UTF-8"?>
<refinfo>
	<!-- only one package entry allowed -->
	<package>
		<type>rtosmodule</type>
		<name>threadx</name>
		<version>6.4.0_rel-rx-1.0.1</version>
		<application>AzureRTOSKernel</application>
		<category>rtos.kernel</category>
		<desc>Azure RTOS ThreadX</desc>
		<details>Azure RTOS ThreadX is an advanced real-time operating system (RTOS) designed specifically for deeply embedded applications</details>
		<configgenpath>
			<path>libs/threadx/tx_user.h</path>
		</configgenpath>
		<!-- Copy resources to project -->
		<impdir>
			<toolchain>GNURX</toolchain>
			<series>RX100</series>
			<group>RX130</group>
			<folder>threadx/ports/rxv1/gnu</folder>
			<path>libs/threadx/ports/rxv1/gnu</path>
		</impdir>
		<impdir>
			<toolchain>RXC</toolchain>
			<series>RX100</series>
			<group>RX130</group>
			<folder>threadx/ports/rxv1/ccrx</folder>
			<path>libs/threadx/ports/rxv1/ccrx</path>
		</impdir>
		<impdir>
			<toolchain>ICCRX</toolchain>
			<series>RX100</series>
			<group>RX130</group>
			<folder>threadx/ports/rxv1/iar</folder>
			<path>libs/threadx/ports/rxv1/iar</path>
		</impdir>
		<impdir>
			<toolchain>GNURX</toolchain>
			<series>RX100</series>
			<series>RX200</series>
			<series>RX600</series>
			<group>RX140</group>
			<group>RX23E-B</group>
			<group>RX23EB</group>
			<group>RX65N</group>
			<group>RX651</group>
			<folder>threadx/ports/rxv2/gnu</folder>
			<path>libs/threadx/ports/rxv2/gnu</path>
		</impdir>
		<impdir>
			<toolchain>RXC</toolchain>
			<series>RX100</series>
			<series>RX200</series>
			<series>RX600</series>
			<group>RX140</group>
			<group>RX23E-B</group>
			<group>RX23EB</group>
			<group>RX65N</group>
			<group>RX651</group>
			<folder>threadx/ports/rxv2/ccrx</folder>
			<path>libs/threadx/ports/rxv2/ccrx</path>
		</impdir>
		<impdir>
			<toolchain>ICCRX</toolchain>
			<series>RX100</series>
			<series>RX200</series>
			<series>RX600</series>
			<group>RX140</group>
			<group>RX23E-B</group>
			<group>RX23EB</group>
			<group>RX65N</group>
			<group>RX651</group>
			<folder>threadx/ports/rxv2/iar</folder>
			<path>libs/threadx/ports/rxv2/iar</path>
		</impdir>
		<impdir>
			<toolchain>GNURX</toolchain>
			<series>RX200</series>
			<series>RX600</series>
			<series>RX700</series>
			<group>RX26T</group>
			<group>RX66T</group>
			<group>RX660</group>
			<group>RX671</group>
			<group>RX72N</group>
			<folder>threadx/ports/rxv3/gnu</folder>
			<path>libs/threadx/ports/rxv3/gnu</path>
		</impdir>
		<impdir>
			<toolchain>RXC</toolchain>
			<series>RX200</series>
			<series>RX600</series>
			<series>RX700</series>
			<group>RX26T</group>
			<group>RX66T</group>
			<group>RX660</group>
			<group>RX671</group>
			<group>RX72N</group>
			<folder>threadx/ports/rxv3/ccrx</folder>
			<path>libs/threadx/ports/rxv3/ccrx</path>
		</impdir>
		<impdir>
			<toolchain>ICCRX</toolchain>
			<series>RX200</series>
			<series>RX600</series>
			<series>RX700</series>
			<group>RX26T</group>
			<group>RX66T</group>
			<group>RX660</group>
			<group>RX671</group>
			<group>RX72N</group>
			<folder>threadx/ports/rxv3/iar</folder>
			<path>libs/threadx/ports/rxv3/iar</path>
		</impdir>
		<impdir>
			<folder>threadx/common</folder>
			<path>libs/threadx/common</path>
		</impdir>
		<impdir>
			<folder>threadx/utility/low_power</folder>
			<path>libs/threadx/utility/low_power</path>
		</impdir>
		<impdir>
			<file>configuration/config_files/tx_user.h</file>
			<path>libs/threadx</path>
		</impdir>
		<!-- include header-->
		<incdir>
			<toolchain>GNURX</toolchain>
			<series>RX100</series>
			<group>RX130</group>
			<path>libs/threadx/ports/rxv1/gnu/inc</path>
		</incdir>
		<incdir>
			<toolchain>RXC</toolchain>
			<series>RX100</series>
			<group>RX130</group>
			<path>libs/threadx/ports/rxv1/ccrx/inc</path>
		</incdir>
		<incdir>
			<toolchain>ICCRX</toolchain>
			<series>RX100</series>
			<group>RX130</group>
			<path>libs/threadx/ports/rxv1/iar/inc</path>
		</incdir>
		<incdir>
			<toolchain>GNURX</toolchain>
			<series>RX100</series>
			<series>RX200</series>
			<series>RX600</series>
			<group>RX140</group>
			<group>RX23E-B</group>
			<group>RX23EB</group>
			<group>RX65N</group>
			<group>RX651</group>
			<path>libs/threadx/ports/rxv2/gnu/inc</path>
		</incdir>
		<incdir>
			<toolchain>RXC</toolchain>
			<series>RX100</series>
			<series>RX200</series>
			<series>RX600</series>
			<group>RX140</group>
			<group>RX23E-B</group>
			<group>RX23EB</group>
			<group>RX65N</group>
			<group>RX651</group>
			<path>libs/threadx/ports/rxv2/ccrx/inc</path>
		</incdir>
		<incdir>
			<toolchain>ICCRX</toolchain>
			<series>RX100</series>
			<series>RX200</series>
			<series>RX600</series>
			<group>RX140</group>
			<group>RX23E-B</group>
			<group>RX23EB</group>
			<group>RX65N</group>
			<group>RX651</group>
			<path>libs/threadx/ports/rxv2/iar/inc</path>
		</incdir>
		<incdir>
			<toolchain>GNURX</toolchain>
			<series>RX200</series>
			<series>RX600</series>
			<series>RX700</series>
			<group>RX26T</group>
			<group>RX66T</group>
			<group>RX660</group>
			<group>RX671</group>
			<group>RX72N</group>
			<path>libs/threadx/ports/rxv3/gnu/inc</path>
		</incdir>
		<incdir>
			<toolchain>RXC</toolchain>
			<series>RX200</series>
			<series>RX600</series>
			<series>RX700</series>
			<group>RX26T</group>
			<group>RX66T</group>
			<group>RX660</group>
			<group>RX671</group>
			<group>RX72N</group>
			<path>libs/threadx/ports/rxv3/ccrx/inc</path>
		</incdir>
		<incdir>
			<toolchain>ICCRX</toolchain>
			<series>RX200</series>
			<series>RX600</series>
			<series>RX700</series>
			<group>RX26T</group>
			<group>RX66T</group>
			<group>RX660</group>
			<group>RX671</group>
			<group>RX72N</group>
			<path>libs/threadx/ports/rxv3/iar/inc</path>
		</incdir>
		<incdir>
			<path>libs/threadx</path>
			<path>libs/threadx/common/inc</path>
			<path>libs/threadx/utility/low_power</path>
		</incdir>
		<!-- app setting -->
		<apps>
			<app id="userconfig">
				<macrodefinition>
					<compiler>TX_INCLUDE_USER_DEFINE_FILE</compiler>
				</macrodefinition>
			</app>
			<app id="macroconfig" value="TX_LOW_POWER_USER_ENTER">
				<sourceedit>
					<file>libs/threadx/tx_user.h</file>
					<key>#define TX_LOW_POWER</key>
					<key>/* Define the Enter low power mode macro*/</key>
					<key>#if TX_LOW_POWER</key>
					<remove>1</remove>
					<data>void %TX_LOW_POWER_USER_ENTER%(void);</data>
					<javascript>if('${TX_LOW_POWER_USER_ENTER}'.indexOf("(") || '${TX_LOW_POWER_USER_ENTER}'.indexOf(")") ) { '${TX_LOW_POWER_USER_ENTER}'.split("(")[0].split(")")[0]; } else {'${TX_LOW_POWER_USER_ENTER}';}</javascript>
				</sourceedit>
			</app>
			<app id="macroconfig" value="TX_LOW_POWER_USER_EXIT">
				<sourceedit>
					<file>libs/threadx/tx_user.h</file>
					<key>#define TX_LOW_POWER</key>
					<key>/* Define the Exist low power mode macro*/</key>
					<key>#if TX_LOW_POWER</key>
					<remove>1</remove>
					<data>void %TX_LOW_POWER_USER_EXIT%(void);</data>
					<javascript>if('${TX_LOW_POWER_USER_EXIT}'.indexOf("(") || '${TX_LOW_POWER_USER_EXIT}'.indexOf(")") ) { '${TX_LOW_POWER_USER_EXIT}'.split("(")[0].split(")")[0]; } else { '${TX_LOW_POWER_USER_EXIT}';}</javascript>
				</sourceedit>
			</app>
			<app id="macroconfig" value="TX_LOW_POWER_TIMER_SETUP">
				<sourceedit>
					<file>libs/threadx/tx_user.h</file>
					<key>#define TX_LOW_POWER</key>
					<key>/* Define the TX_LOW_POWER_TIMER_SETUP macro*/</key>
					<key>#if USE_TX_LOW_POWER_TIMER_SETUP</key>
					<remove>1</remove>
					<data>void %TX_LOW_POWER_TIMER_SETUP%(unsigned long tx_low_power_next_expiration); /* can not use ULONG */</data>
					<!--javascript>if('${TX_LOW_POWER_TIMER_SETUP}'.indexOf("(") || '${TX_LOW_POWER_TIMER_SETUP}'.indexOf(")") ) { '${TX_LOW_POWER_TIMER_SETUP}'.split("(")[0].split(")")[0]; } else {'${TX_LOW_POWER_TIMER_SETUP}';}</javascript-->
				</sourceedit>
			</app>
			<app id="macroconfig" value="TX_LOW_POWER_USER_TIMER_ADJUST">
				<sourceedit>
					<file>libs/threadx/tx_user.h</file>
					<key>#define TX_LOW_POWER</key>
					<key>/* Define the TX_LOW_POWER_USER_TIMER_ADJUST macro*/</key>
					<key>#if USE_TX_LOW_POWER_USER_TIMER_ADJUST</key>
					<remove>1</remove>
					<data>unsigned long %TX_LOW_POWER_USER_TIMER_ADJUST%(void); /* can not use ULONG */</data>
					<javascript>if('${TX_LOW_POWER_USER_TIMER_ADJUST}'.indexOf("(") || '${TX_LOW_POWER_USER_TIMER_ADJUST}'.indexOf(")") ) { '${TX_LOW_POWER_USER_TIMER_ADJUST}'.split("(")[0].split(")")[0]; } else {'${TX_LOW_POWER_USER_TIMER_ADJUST}';}</javascript>
				</sourceedit>
			</app>
		</apps>
	</package>
</refinfo>